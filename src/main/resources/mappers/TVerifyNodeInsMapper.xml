<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zljx.mapper.TVerifyNodeInsMapper">
  <resultMap id="BaseResultMap" type="com.zljx.verify.TVerifyNodeIns">
    <id column="node_ins_id" jdbcType="BIGINT" property="nodeInsId" />
    <result column="flow_ins_id" jdbcType="BIGINT" property="flowInsId" />
    <result column="operation_id" jdbcType="BIGINT" property="operationId" />
    <result column="ins_flow_order" jdbcType="TINYINT" property="insFlowOrder" />
    <result column="next_ins_node" jdbcType="BIGINT" property="nextInsNode" />
    <result column="is_verify" jdbcType="TINYINT" property="isVerify" />
    <result column="verify_time" jdbcType="TIMESTAMP" property="verifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    node_ins_id, flow_ins_id, operation_id, ins_flow_order, next_ins_node, is_verify, 
    verify_time
  </sql>
  <select id="selectByExample" parameterType="com.zljx.verify.TVerifyNodeInsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_verify_node_ins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_verify_node_ins
    where node_ins_id = #{nodeInsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_verify_node_ins
    where node_ins_id = #{nodeInsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zljx.verify.TVerifyNodeInsExample">
    delete from t_verify_node_ins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zljx.verify.TVerifyNodeIns">
    insert into t_verify_node_ins (node_ins_id, flow_ins_id, operation_id, 
      ins_flow_order, next_ins_node, is_verify, 
      verify_time)
    values (#{nodeInsId,jdbcType=BIGINT}, #{flowInsId,jdbcType=BIGINT}, #{operationId,jdbcType=BIGINT}, 
      #{insFlowOrder,jdbcType=TINYINT}, #{nextInsNode,jdbcType=BIGINT}, #{isVerify,jdbcType=TINYINT}, 
      #{verifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zljx.verify.TVerifyNodeIns" useGeneratedKeys="true" keyProperty="nodeInsId">
    insert into t_verify_node_ins
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeInsId != null">
        node_ins_id,
      </if>
      <if test="flowInsId != null">
        flow_ins_id,
      </if>
      <if test="operationId != null">
        operation_id,
      </if>
      <if test="insFlowOrder != null">
        ins_flow_order,
      </if>
      <if test="nextInsNode != null">
        next_ins_node,
      </if>
      <if test="isVerify != null">
        is_verify,
      </if>
      <if test="verifyTime != null">
        verify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeInsId != null">
        #{nodeInsId,jdbcType=BIGINT},
      </if>
      <if test="flowInsId != null">
        #{flowInsId,jdbcType=BIGINT},
      </if>
      <if test="operationId != null">
        #{operationId,jdbcType=BIGINT},
      </if>
      <if test="insFlowOrder != null">
        #{insFlowOrder,jdbcType=TINYINT},
      </if>
      <if test="nextInsNode != null">
        #{nextInsNode,jdbcType=BIGINT},
      </if>
      <if test="isVerify != null">
        #{isVerify,jdbcType=TINYINT},
      </if>
      <if test="verifyTime != null">
        #{verifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zljx.verify.TVerifyNodeInsExample" resultType="java.lang.Long">
    select count(*) from t_verify_node_ins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_verify_node_ins
    <set>
      <if test="record.nodeInsId != null">
        node_ins_id = #{record.nodeInsId,jdbcType=BIGINT},
      </if>
      <if test="record.flowInsId != null">
        flow_ins_id = #{record.flowInsId,jdbcType=BIGINT},
      </if>
      <if test="record.operationId != null">
        operation_id = #{record.operationId,jdbcType=BIGINT},
      </if>
      <if test="record.insFlowOrder != null">
        ins_flow_order = #{record.insFlowOrder,jdbcType=TINYINT},
      </if>
      <if test="record.nextInsNode != null">
        next_ins_node = #{record.nextInsNode,jdbcType=BIGINT},
      </if>
      <if test="record.isVerify != null">
        is_verify = #{record.isVerify,jdbcType=TINYINT},
      </if>
      <if test="record.verifyTime != null">
        verify_time = #{record.verifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_verify_node_ins
    set node_ins_id = #{record.nodeInsId,jdbcType=BIGINT},
      flow_ins_id = #{record.flowInsId,jdbcType=BIGINT},
      operation_id = #{record.operationId,jdbcType=BIGINT},
      ins_flow_order = #{record.insFlowOrder,jdbcType=TINYINT},
      next_ins_node = #{record.nextInsNode,jdbcType=BIGINT},
      is_verify = #{record.isVerify,jdbcType=TINYINT},
      verify_time = #{record.verifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zljx.verify.TVerifyNodeIns">
    update t_verify_node_ins
    <set>
      <if test="flowInsId != null">
        flow_ins_id = #{flowInsId,jdbcType=BIGINT},
      </if>
      <if test="operationId != null">
        operation_id = #{operationId,jdbcType=BIGINT},
      </if>
      <if test="insFlowOrder != null">
        ins_flow_order = #{insFlowOrder,jdbcType=TINYINT},
      </if>
      <if test="nextInsNode != null">
        next_ins_node = #{nextInsNode,jdbcType=BIGINT},
      </if>
      <if test="isVerify != null">
        is_verify = #{isVerify,jdbcType=TINYINT},
      </if>
      <if test="verifyTime != null">
        verify_time = #{verifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where node_ins_id = #{nodeInsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zljx.verify.TVerifyNodeIns">
    update t_verify_node_ins
    set flow_ins_id = #{flowInsId,jdbcType=BIGINT},
      operation_id = #{operationId,jdbcType=BIGINT},
      ins_flow_order = #{insFlowOrder,jdbcType=TINYINT},
      next_ins_node = #{nextInsNode,jdbcType=BIGINT},
      is_verify = #{isVerify,jdbcType=TINYINT},
      verify_time = #{verifyTime,jdbcType=TIMESTAMP}
    where node_ins_id = #{nodeInsId,jdbcType=BIGINT}
  </update>

  <select id="selectByTaskIdAndOperationId" resultMap="BaseResultMap">

        SELECT
            nodeins.*
        FROM
            t_verify_flow_ins flowins
            INNER JOIN  nt_verify_node_insodeins ON flowins.next_id = nodeins.node_ins_id
            WHERE flowins.task_id = #{taskId,jdbcType=BIGINT}
                and nodeins.operation_id = #{operationId,jdbcType=BIGINT}
  </select>

</mapper>