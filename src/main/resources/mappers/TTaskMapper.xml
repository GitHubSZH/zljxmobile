<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zljx.mapper.TTaskMapper">
  <resultMap id="BaseResultMap" type="com.zljx.verify.TTask">
    <id column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="aap_id" jdbcType="BIGINT" property="aapId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="context" jdbcType="VARCHAR" property="context" />
    <result column="verify_type" jdbcType="TINYINT" property="verifyType" />
    <result column="stauts" jdbcType="TINYINT" property="stauts" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_operation" jdbcType="BIGINT" property="createOperation" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, aap_id, title, context, verify_type, stauts, create_time, create_operation, 
    last_update_time
  </sql>
  <select id="selectByExample" parameterType="com.zljx.verify.TTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zljx.verify.TTaskExample">
    delete from t_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zljx.verify.TTask">
    insert into t_task (task_id, aap_id, title, 
      context, verify_type, stauts, 
      create_time, create_operation, last_update_time
      )
    values (#{taskId,jdbcType=BIGINT}, #{aapId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{context,jdbcType=VARCHAR}, #{verifyType,jdbcType=TINYINT}, #{stauts,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createOperation,jdbcType=BIGINT}, #{lastUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zljx.verify.TTask" useGeneratedKeys = "true" keyProperty = "taskId">
    insert into t_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="aapId != null">
        aap_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="verifyType != null">
        verify_type,
      </if>
      <if test="stauts != null">
        stauts,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createOperation != null">
        create_operation,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="aapId != null">
        #{aapId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="verifyType != null">
        #{verifyType,jdbcType=TINYINT},
      </if>
      <if test="stauts != null">
        #{stauts,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperation != null">
        #{createOperation,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zljx.verify.TTaskExample" resultType="java.lang.Long">
    select count(*) from t_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_task
    <set>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.aapId != null">
        aap_id = #{record.aapId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.verifyType != null">
        verify_type = #{record.verifyType,jdbcType=TINYINT},
      </if>
      <if test="record.stauts != null">
        stauts = #{record.stauts,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOperation != null">
        create_operation = #{record.createOperation,jdbcType=BIGINT},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_task
    set task_id = #{record.taskId,jdbcType=BIGINT},
      aap_id = #{record.aapId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      context = #{record.context,jdbcType=VARCHAR},
      verify_type = #{record.verifyType,jdbcType=TINYINT},
      stauts = #{record.stauts,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_operation = #{record.createOperation,jdbcType=BIGINT},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zljx.verify.TTask">
    update t_task
    <set>
      <if test="aapId != null">
        aap_id = #{aapId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="verifyType != null">
        verify_type = #{verifyType,jdbcType=TINYINT},
      </if>
      <if test="stauts != null">
        stauts = #{stauts,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperation != null">
        create_operation = #{createOperation,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zljx.verify.TTask">
    update t_task
    set aap_id = #{aapId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      context = #{context,jdbcType=VARCHAR},
      verify_type = #{verifyType,jdbcType=TINYINT},
      stauts = #{stauts,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_operation = #{createOperation,jdbcType=BIGINT},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>


  <select id="selectNoyWayCheck" resultType="map">

        SELECT
           (select operation_name FROM t_operation WHERE operation_id=nodeins.operation_id) as VerifyName,task.*
        FROM
            t_task `task`
            LEFT JOIN t_verify_flow_ins flowins ON task.task_id = flowins.task_id
            INNER JOIN t_verify_node_ins nodeins ON
            <!--<choose>
              <when test=""></when>
              <otherwise>

              </otherwise>
            </choose>-->
            flowins.next_id = nodeins.node_ins_id
        WHERE
            nodeins.operation_id=#{operationId,jdbcType=BIGINT}
        AND
            flowins.verify_status = 1
        <if test="appId != null">
          AND task.aap_id = #{appId,jdbcType=BIGINT}
        </if>
  </select>

  <select id="succeedCheck" resultType="map">

    select
        *
    from
      t_task `task`
            LEFT JOIN t_verify_flow_ins flowins ON task.task_id = flowins.task_id
    where EXISTS (select 1 from t_verify_node_ins where is_verify=1 and operation_id=#{operationId,jdbcType=BIGINT})

    and 1=1
    <if test="appId != null">
       and task.aap_id=#{appId,jdbcType=BIGINT}
    </if>

  </select>

</mapper>